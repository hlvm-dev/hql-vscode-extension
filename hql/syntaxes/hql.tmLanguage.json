{
  "scopeName": "source.hql",
  "name": "HQL",
  "patterns": [
    {
      "include": "#comment"
    },
    {
      "include": "#string"
    },
    {
      "include": "#number"
    },
    {
      "include": "#boolean"
    },
    {
      "include": "#nil"
    },
    {
      "include": "#keyword"
    },
    {
      "include": "#special-form"
    },
    {
      "include": "#function-definition"
    },
    {
      "include": "#function-call"
    },
    {
      "include": "#type-annotation"
    },
    {
      "include": "#named-parameter"
    },
    {
      "include": "#vector-literal"
    },
    {
      "include": "#object-literal"
    },
    {
      "include": "#set-literal"
    },
    {
      "include": "#enum-case"
    },
    {
      "include": "#regular-symbol"
    },
    {
      "include": "#default-parameter"
    },
    {
      "include": "#parens"
    }
  ],
  "repository": {
    "comment": {
      "patterns": [
        {
          "match": ";.*$",
          "name": "comment.line.semicolon.hql"
        }
      ]
    },
    "string": {
      "name": "string.quoted.double.hql",
      "begin": "\"",
      "end": "\"",
      "patterns": [
        {
          "name": "constant.character.escape.hql",
          "match": "\\\\."
        },
        {
          "name": "meta.embedded.line.hql",
          "begin": "\\\\\\(",
          "beginCaptures": {
            "0": {
              "name": "punctuation.section.embedded.begin.hql"
            }
          },
          "end": "\\)",
          "endCaptures": {
            "0": {
              "name": "punctuation.section.embedded.end.hql"
            }
          },
          "patterns": [
            {
              "include": "$self"
            }
          ]
        }
      ]
    },
    "number": {
      "match": "(-|\\+)?\\d+(\\.\\d+)?",
      "name": "constant.numeric.hql"
    },
    "boolean": {
      "match": "\\b(true|false)\\b",
      "name": "constant.language.boolean.hql"
    },
    "nil": {
      "match": "\\b(nil|null)\\b",
      "name": "constant.language.nil.hql"
    },
    "keyword": {
      "match": "(:|[a-zA-Z][a-zA-Z0-9\\-_]*:)",
      "name": "constant.other.keyword.hql"
    },
    "special-form": {
      "match": "\\b(def|defsync|defn|defx|fn|fx|defmacro|let|if|loop|cond|when|case|do|for|str|get|set|new|->|print|export|defenum|import|keyword|hash-map|vector|list)\\b",
      "name": "keyword.control.hql"
    },
    "function-definition": {
      "name": "meta.function.hql",
      "begin": "\\((defn|defx|def|defsync|defmacro)\\s+([a-zA-Z\\-_][a-zA-Z0-9\\-_]*)",
      "beginCaptures": {
        "1": {
          "name": "keyword.control.hql"
        },
        "2": {
          "name": "entity.name.function.hql"
        }
      },
      "end": "\\)",
      "patterns": [
        {
          "include": "$self"
        }
      ]
    },
    "function-call": {
      "name": "meta.function-call.hql",
      "begin": "\\(([a-zA-Z\\-_][a-zA-Z0-9\\-_]*)",
      "beginCaptures": {
        "1": {
          "name": "entity.name.function.hql"
        }
      },
      "end": "\\)",
      "patterns": [
        {
          "include": "$self"
        }
      ]
    },
    "type-annotation": {
      "match": "\\b([a-zA-Z][a-zA-Z0-9\\-_]*)\\s*:\\s*([A-Z][a-zA-Z0-9]*)",
      "captures": {
        "1": {
          "name": "variable.parameter.hql"
        },
        "2": {
          "name": "entity.name.type.hql"
        }
      }
    },
    "named-parameter": {
      "name": "meta.named-parameter.hql",
      "match": "\\b([a-zA-Z][a-zA-Z0-9\\-_]*):\\s*",
      "captures": {
        "1": {
          "name": "variable.parameter.hql"
        }
      }
    },
    "vector-literal": {
      "name": "meta.vector.hql",
      "begin": "\\[",
      "end": "\\]",
      "patterns": [
        {
          "include": "$self"
        }
      ]
    },
    "object-literal": {
      "name": "meta.object.hql",
      "begin": "\\{",
      "end": "\\}",
      "patterns": [
        {
          "include": "$self"
        }
      ]
    },
    "set-literal": {
      "name": "meta.set.hql",
      "begin": "#\\[",
      "beginCaptures": {
        "0": {
          "name": "punctuation.definition.set.begin.hql"
        }
      },
      "end": "\\]",
      "endCaptures": {
        "0": {
          "name": "punctuation.definition.set.end.hql"
        }
      },
      "patterns": [
        {
          "include": "$self"
        }
      ]
    },
    "enum-case": {
      "name": "constant.other.symbol.enum.hql",
      "match": "\\.([a-zA-Z][a-zA-Z0-9\\-_]*)",
      "captures": {
        "1": {
          "name": "entity.name.type.enum.hql"
        }
      }
    },
    "regular-symbol": {
      "match": "\\b([a-zA-Z\\-_][a-zA-Z0-9\\-_]*)\\b",
      "name": "variable.other.hql"
    },
    "default-parameter": {
      "match": "\\b([a-zA-Z][a-zA-Z0-9\\-_]*)\\s+=\\s+",
      "captures": {
        "1": {
          "name": "variable.parameter.hql"
        }
      }
    },
    "parens": {
      "name": "meta.parens.hql",
      "begin": "\\(",
      "beginCaptures": {
        "0": {
          "name": "punctuation.section.parens.begin.hql"
        }
      },
      "end": "\\)",
      "endCaptures": {
        "0": {
          "name": "punctuation.section.parens.end.hql"
        }
      },
      "patterns": [
        {
          "include": "$self"
        }
      ]
    }
  }
}