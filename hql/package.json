{
  "name": "hql",
  "displayName": "HQL Language Support",
  "description": "Advanced HQL extension with integrated nREPL, LSP support, and modern HQL syntax",
  "version": "1.0.0",
  "publisher": "hql-team",
  "engines": {
    "vscode": "^1.97.0"
  },
  "categories": [
    "Programming Languages",
    "Snippets",
    "Formatters",
    "Linters"
  ],
  "keywords": [
    "hql",
    "lisp",
    "repl",
    "language-server"
  ],
  "activationEvents": [
    "onLanguage:hql",
    "onCommand:hql.evaluateExpression",
    "onCommand:hql.evaluateOutermostExpression",
    "onCommand:hql.cancelEvaluations",
    "onCommand:hql.extractVariable",
    "onCommand:hql.fixParentheses",
    "onCommand:hql.formatDocument",
    "onCommand:hql.startREPLServer",
    "onCommand:hql.stopREPLServer",
    "onCommand:hql.restartREPLServer"
  ],
  "main": "./out/extension.js",
  "contributes": {
    "languages": [
      {
        "id": "hql",
        "aliases": ["HQL", "hql"],
        "extensions": [".hql"],
        "configuration": "./config/language-configuration-hql.json",
        "icon": {
          "light": "./icons/hql-light.png",
          "dark": "./icons/hql-dark.png"
        }
      }
    ],
    "commands": [
      {
        "command": "hql.evaluateExpression",
        "title": "HQL: Evaluate Expression",
        "category": "HQL"
      },
      {
        "command": "hql.evaluateOutermostExpression",
        "title": "HQL: Evaluate Outermost Expression",
        "category": "HQL"
      },
      {
        "command": "hql.cancelEvaluations",
        "title": "HQL: Cancel All Evaluations",
        "category": "HQL"
      },
      {
        "command": "hql.extractVariable",
        "title": "HQL: Extract to Variable",
        "category": "HQL"
      },
      {
        "command": "hql.fixParentheses",
        "title": "HQL: Fix Unmatched Parentheses",
        "category": "HQL"
      },
      {
        "command": "hql.formatDocument",
        "title": "HQL: Format Document",
        "category": "HQL"
      },
      {
        "command": "hql.startREPLServer",
        "title": "HQL: Start REPL Server",
        "category": "HQL"
      },
      {
        "command": "hql.stopREPLServer",
        "title": "HQL: Stop REPL Server",
        "category": "HQL" 
      },
      {
        "command": "hql.restartREPLServer",
        "title": "HQL: Restart REPL Server",
        "category": "HQL"
      },
      {
        "command": "hql.paredit.wrapWithParentheses",
        "title": "HQL Paredit: Wrap With ()",
        "category": "HQL Paredit"
      },
      {
        "command": "hql.paredit.wrapWithBrackets",
        "title": "HQL Paredit: Wrap With []",
        "category": "HQL Paredit"
      },
      {
        "command": "hql.paredit.wrapWithBraces",
        "title": "HQL Paredit: Wrap With {}",
        "category": "HQL Paredit"
      },
      {
        "command": "hql.paredit.unwrap",
        "title": "HQL Paredit: Unwrap Expression",
        "category": "HQL Paredit"
      },
      {
        "command": "hql.paredit.slurpForward",
        "title": "HQL Paredit: Slurp Forward",
        "category": "HQL Paredit"
      },
      {
        "command": "hql.paredit.barfForward",
        "title": "HQL Paredit: Barf Forward",
        "category": "HQL Paredit"
      },
      {
        "command": "hql.paredit.slurpBackward",
        "title": "HQL Paredit: Slurp Backward",
        "category": "HQL Paredit"
      },
      {
        "command": "hql.paredit.barfBackward",
        "title": "HQL Paredit: Barf Backward",
        "category": "HQL Paredit"
      },
      {
        "command": "hql.paredit.splice",
        "title": "HQL Paredit: Splice Expression",
        "category": "HQL Paredit"
      },
      {
        "command": "hql.paredit.raise",
        "title": "HQL Paredit: Raise Expression",
        "category": "HQL Paredit"
      },
      {
        "command": "hql.paredit.transpose",
        "title": "HQL Paredit: Transpose Expression",
        "category": "HQL Paredit"
      },
      {
        "command": "hql.paredit.killNextForm",
        "title": "HQL Paredit: Kill Next Form",
        "category": "HQL Paredit"
      },
      {
        "command": "hql.paredit.killPreviousForm",
        "title": "HQL Paredit: Kill Previous Form",
        "category": "HQL Paredit"
      }
    ],
    "keybindings": [
      {
        "command": "hql.evaluateOutermostExpression",
        "key": "cmd+enter",
        "mac": "cmd+enter",
        "win": "ctrl+enter",
        "linux": "ctrl+enter",
        "when": "editorLangId == hql && editorTextFocus"
      },
      {
        "command": "hql.evaluateExpression",
        "key": "cmd+ctrl+enter",
        "mac": "cmd+ctrl+enter",
        "win": "ctrl+alt+enter",
        "linux": "ctrl+alt+enter",
        "when": "editorLangId == hql && editorTextFocus"
      },
      {
        "command": "hideSuggestWidget",
        "key": "escape",
        "when": "suggestWidgetVisible && editorLangId == hql"
      },
      {
        "command": "editor.action.inlineSuggest.hide",
        "key": "escape",
        "when": "inlineSuggestionVisible && editorLangId == hql"
      },
      {
        "command": "hql.cancelEvaluations",
        "key": "escape",
        "when": "editorLangId == hql && editorTextFocus && !suggestWidgetVisible && !inlineSuggestionVisible && !editorHasMultipleSelections"
      },
      {
        "command": "hideSuggestWidget",
        "key": "escape",
        "when": "editorLangId == hql && editorTextFocus && inlineSuggestionVisible"
      },
      {
        "command": "hql.formatDocument",
        "key": "shift+alt+f",
        "when": "editorLangId == hql && editorTextFocus"
      },
      {
        "command": "hql.paredit.wrapWithParentheses",
        "key": "ctrl+alt+p",
        "mac": "cmd+alt+p",
        "when": "editorLangId == hql && editorTextFocus"
      },
      {
        "command": "hql.paredit.wrapWithBrackets",
        "key": "ctrl+alt+b",
        "mac": "cmd+alt+b",
        "when": "editorLangId == hql && editorTextFocus"
      },
      {
        "command": "hql.paredit.wrapWithBraces",
        "key": "ctrl+alt+c",
        "mac": "cmd+alt+c",
        "when": "editorLangId == hql && editorTextFocus"
      },
      {
        "command": "hql.paredit.slurpForward",
        "key": "ctrl+right",
        "mac": "ctrl+right",
        "when": "editorLangId == hql && editorTextFocus"
      },
      {
        "command": "hql.paredit.barfForward",
        "key": "ctrl+shift+right",
        "mac": "ctrl+shift+right",
        "when": "editorLangId == hql && editorTextFocus"
      },
      {
        "command": "hql.paredit.slurpBackward",
        "key": "ctrl+left",
        "mac": "ctrl+left",
        "when": "editorLangId == hql && editorTextFocus"
      },
      {
        "command": "hql.paredit.barfBackward",
        "key": "ctrl+shift+left",
        "mac": "ctrl+shift+left",
        "when": "editorLangId == hql && editorTextFocus"
      },
      {
        "command": "hql.paredit.splice",
        "key": "ctrl+alt+s",
        "mac": "cmd+alt+s",
        "when": "editorLangId == hql && editorTextFocus"
      },
      {
        "command": "hql.paredit.raise",
        "key": "ctrl+alt+r",
        "mac": "cmd+alt+r",
        "when": "editorLangId == hql && editorTextFocus"
      },
      {
        "command": "hql.paredit.killNextForm",
        "key": "ctrl+alt+k",
        "mac": "cmd+alt+k",
        "when": "editorLangId == hql && editorTextFocus"
      },
      {
        "command": "hql.paredit.killPreviousForm",
        "key": "ctrl+alt+shift+k",
        "mac": "cmd+alt+shift+k",
        "when": "editorLangId == hql && editorTextFocus"
      }
    ],
    "grammars": [
      {
        "language": "hql",
        "scopeName": "source.hql",
        "path": "./syntaxes/hql.tmLanguage.json"
      }
    ],
    "snippets": [
      {
        "language": "hql",
        "path": "./snippets/hql.json"
      }
    ],
    "configuration": {
      "title": "HQL",
      "properties": {
        "hql.server.url": {
          "type": "string",
          "default": "http://localhost:5100",
          "description": "URL of the HQL nREPL server"
        },
        "hql.server.path": {
          "type": "string",
          "default": "",
          "description": "Path to the HQL REPL server executable"
        },
        "hql.server.autoStart": {
          "type": "boolean",
          "default": false,
          "description": "Automatically start the HQL nREPL server on extension activation"
        },
        "hql.server.startTimeout": {
          "type": "number",
          "default": 10000,
          "description": "Timeout in milliseconds for starting the HQL nREPL server"
        },
        "hql.format.indentSize": {
          "type": "number",
          "default": 2,
          "description": "Number of spaces for each level of indentation"
        },
        "hql.format.alignParameters": {
          "type": "boolean",
          "default": true,
          "description": "Align parameters in function calls"
        },
        "hql.completions.includeImported": {
          "type": "boolean", 
          "default": true,
          "description": "Include suggestions from imported modules"
        },
        "hql.evaluation.showInline": {
          "type": "boolean",
          "default": true,
          "description": "Show evaluation results inline"
        },
        "hql.evaluation.timeout": {
          "type": "number",
          "default": 10000,
          "description": "Timeout for evaluations in milliseconds"
        },
        "hql.paredit.enabled": {
          "type": "boolean",
          "default": true,
          "description": "Enable paredit structural editing features"
        },
        "hql.theme.parenthesesColors": {
          "type": "array",
          "default": [
            "#8000ff",
            "#ff0000",
            "#0000ff"
          ],
          "description": "Colors for nested parentheses (SICP style)",
          "items": {
            "type": "string"
          }
        },
        "hql.debug.enabled": {
          "type": "boolean",
          "default": false,
          "description": "Enable debug logging for HQL extension"
        }
      }
    },
    "menus": {
      "editor/context": [
        {
          "when": "editorLangId == hql",
          "command": "hql.evaluateExpression",
          "group": "1_modification"
        },
        {
          "when": "editorLangId == hql",
          "command": "hql.evaluateOutermostExpression",
          "group": "1_modification"
        },
        {
          "when": "editorHasSelection && editorLangId == hql",
          "command": "hql.extractVariable",
          "group": "2_modification"
        },
        {
          "when": "editorLangId == hql",
          "submenu": "hql.paredit",
          "group": "3_modification"
        }
      ],
      "hql.paredit": [
        {
          "command": "hql.paredit.wrapWithParentheses",
          "group": "1_wrap"
        },
        {
          "command": "hql.paredit.wrapWithBrackets",
          "group": "1_wrap"
        },
        {
          "command": "hql.paredit.wrapWithBraces",
          "group": "1_wrap"
        },
        {
          "command": "hql.paredit.unwrap",
          "group": "1_wrap"
        },
        {
          "command": "hql.paredit.slurpForward",
          "group": "2_slurpbarf"
        },
        {
          "command": "hql.paredit.slurpBackward",
          "group": "2_slurpbarf"
        },
        {
          "command": "hql.paredit.barfForward",
          "group": "2_slurpbarf"
        },
        {
          "command": "hql.paredit.barfBackward",
          "group": "2_slurpbarf"
        },
        {
          "command": "hql.paredit.splice",
          "group": "3_splice"
        },
        {
          "command": "hql.paredit.raise",
          "group": "3_splice"
        }
      ]
    },
    "submenus": [
      {
        "id": "hql.paredit",
        "label": "HQL Paredit"
      }
    ],
    "problemPatterns": [
      {
        "name": "hql",
        "regexp": "^(.*?):(\\d+):(\\d+):(.*?)$",
        "file": 1,
        "line": 2,
        "column": 3,
        "message": 4
      }
    ],
    "problemMatchers": [
      {
        "name": "hql",
        "owner": "hql",
        "fileLocation": ["relative", "${workspaceFolder}"],
        "pattern": "$hql"
      }
    ]
  },
  "scripts": {
    "clean": "rm -rf out",
    "vscode:prepublish": "npm run compile",
    "compile": "tsc -p ./",
    "watch": "tsc -watch -p ./",
    "lint": "eslint src --ext ts",
    "test": "npm run compile && vscode-test-cli",
    "test:unit": "mocha -r ts-node/register 'src/test/unit/**/*.test.ts'",
    "debug": "npm run clean && npm run compile && code --extensionDevelopmentPath=${PWD}"
  },
  "devDependencies": {
    "@types/vscode": "^1.97.0",
    "@types/mocha": "^10.0.10",
    "@types/node": "20.x",
    "typescript": "^5.7.3",
    "eslint": "^9.19.0",
    "@vscode/test-cli": "^0.0.10",
    "@vscode/test-electron": "^2.4.1",
    "node-fetch": "^2.6.1",
    "vscode-languageclient": "^8.0.2",
    "vscode-languageserver": "^7.0.0",
    "vscode-languageserver-textdocument": "^1.0.1",
    "ts-node": "^10.9.2",
    "mocha": "^10.3.0"
  },
  "dependencies": {
    "vscode-languageclient": "^8.0.2",
    "vscode-languageserver": "^7.0.0",
    "vscode-languageserver-textdocument": "^1.0.1"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/hql-team/hql-vscode-extension.git"
  },
  "homepage": "https://github.com/hql-team/hql-vscode-extension",
  "bugs": {
    "url": "https://github.com/hql-team/hql-vscode-extension/issues"
  },
  "author": "HQL Team",
  "license": "MIT"
}